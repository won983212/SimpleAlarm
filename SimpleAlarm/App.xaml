<Application x:Class="SimpleAlarm.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SimpleAlarm"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="BlackBrush" Color="#FF333333"/>
        <SolidColorBrush x:Key="LightBlackBrush" Color="#FF3E3E3E"/>
        <SolidColorBrush x:Key="WhiteBrush" Color="#FFFDFDFD"/>
        <SolidColorBrush x:Key="GrayBrush" Color="Gray"/>
        <SolidColorBrush x:Key="BlueBrush" Color="#FF00BCD5"/>

        <LinearGradientBrush x:Key="EveningBrush" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
            <GradientStop Color="#FF263747"/>
            <GradientStop Color="#FFC5986F" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="MorningBrush" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
            <GradientStop Color="#FF9EB7CB" Offset="0.5"/>
            <GradientStop Color="#FFE2B769" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="AfternoonBrush" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
            <GradientStop Color="#FF527CB6"/>
            <GradientStop Color="#FF96BCE0" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="NightBrush" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
            <GradientStop Color="#FF0F1547"/>
            <GradientStop Color="#FF2C3959" Offset="1"/>
        </LinearGradientBrush>

        <Style TargetType="Button">
            <Setter Property="Background" Value="#FF2A579A"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF3368B6"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF214478"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" Value="#FFA8A8A8"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="TransparentButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#22FFFFFF"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" Value="#11FFFFFF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SliderCheckbox" TargetType="CheckBox">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border x:Name="pnlBackground" Width="60" Height="20" BorderBrush="{StaticResource GrayBrush}" BorderThickness="1" Background="{StaticResource GrayBrush}" CornerRadius="4">
                            <Border x:Name="rctMark" HorizontalAlignment="Left" Width="30" Height="18" CornerRadius="4" Background="{StaticResource WhiteBrush}" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="posTransform" X="0"/>
                                </Border.RenderTransform>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="pnlBackground" Property="Background" Value="{StaticResource BlueBrush}"/>
                                <Setter TargetName="pnlBackground" Property="BorderBrush" Value="{StaticResource BlueBrush}"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="28" From="0" Storyboard.TargetName="posTransform" Storyboard.TargetProperty="X">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" From="28" Storyboard.TargetName="posTransform" Storyboard.TargetProperty="X">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
